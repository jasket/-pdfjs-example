{"version":3,"sources":["components/tiles/PageTitle.js","context/useContext.js","components/searchbar/SearchBar.js","components/searchbar/SearchList.js","components/tiles/PageActionPanel.js","components/viewer/PdfJsViewer.js","components/tiles/PageViewerPanel.js","hooks/usePdfViewer.js","context/AppState.js","components/App.js","reportWebVitals.js","index.js"],"names":["PageTitle","Box","mt","Typography","color","component","variant","my","Divider","React","memo","AppContext","createContext","SearchBar","useContext","searchValue","handleSearchValue","handleAddSearchItem","TextField","value","fullWidth","placeholder","helperText","onChange","e","target","onKeyDown","key","colors","SearchList","searchItems","onClick","useCallback","item","textLayer","document","querySelector","console","log","childNodes","innerText","newNode","cloneNode","Array","from","forEach","_","elementIndex","text","innerHTML","index","indexOf","updatedText","substring","join","length","List","dense","map","rndColor","Math","floor","random","ListItem","style","Link","PageActionPanel","PdfJsViewer","wrapperRef","Grid","ref","className","PageViewerPanel","pdfjsLib","pdfjsViewer","workerSrc","AppState","children","useRef","useState","setSearchItems","includes","pdfController","wrapper","useEffect","alert","container","current","eventBus","pdfLinkService","pdfFindController","linkService","pdfSinglePageViewer","findController","setViewer","on","currentScaleValue","url","cMapUrl","cMapPacked","promise","then","pdfDocument","setDocument","usePdfViewer","Provider","App","CssBaseline","mx","spacing","xs","md","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34a93583.chunk.js","sourcesContent":["import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst PageTitle = () => (\n  <Box mt={2}>\n    <Typography color=\"secondary\" component=\"h1\" variant=\"h5\">\n      PDF Highlight\n      <Box my={2}>\n        <Divider />\n      </Box>\n    </Typography>\n  </Box>\n);\n\nexport default React.memo(PageTitle);\n","import { createContext } from \"react\";\n\nconst AppContext = createContext(null);\n\nexport default AppContext;\n","import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AppContext from \"../../context/useContext\";\n\nconst SearchBar = () => {\n  const { searchValue, handleSearchValue, handleAddSearchItem } = useContext(\n    AppContext\n  );\n\n  const onChange = (e) => {\n    handleSearchValue(e.target.value);\n  };\n\n  const onKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleAddSearchItem(e.target.value);\n    }\n  };\n\n  return (\n    <TextField\n      value={searchValue}\n      fullWidth\n      placeholder=\"Search value\"\n      helperText=\"Press Enter to add a search item\"\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n    />\n  );\n};\n\nexport default React.memo(SearchBar);\n","import React, { useCallback, useContext } from \"react\";\nimport AppContext from \"../../context/useContext\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Link from \"@material-ui/core/Link\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\nconst colors = [\n  [224, 130, 131],\n  [241, 130, 141],\n  [190, 144, 212],\n  [220, 198, 224],\n  [241, 231, 254],\n  [41, 241, 195],\n  [123, 239, 178],\n  [200, 247, 197],\n];\n\nconst SearchList = () => {\n  const { searchItems } = useContext(AppContext);\n\n  const onClick = useCallback((item, color) => {\n    /*pdfController.executeCommand(\"find\", {\n        query: item,\n        highlightAll: true,\n        findPrevious: undefined,\n      });*/\n    const textLayer = document.querySelector(\".textLayer\");\n    console.log(textLayer.childNodes, textLayer.innerText);\n\n    const newNode = textLayer.cloneNode(true);\n    Array.from(newNode.childNodes).forEach((_, elementIndex) => {\n      const text = textLayer.childNodes[elementIndex].innerHTML;\n\n      const index = text.indexOf(item);\n\n      if (index < 0) return;\n\n      let updatedText = `${text.substring(\n        0,\n        index\n      )}<span style=\"background-color: rgb(${color.join(\n        \",\"\n      )})\">${text.substring(index, index + item.length)}</span>${text.substring(\n        index + item.length\n      )}`;\n      textLayer.childNodes[elementIndex].innerHTML = updatedText;\n    });\n  }, []);\n\n  return (\n    <List dense>\n      {searchItems.map((item) => {\n        const rndColor = colors[Math.floor(Math.random() * colors.length)];\n        return (\n          <ListItem key={item}>\n            <ArrowRightIcon style={{ color: `rgb(${rndColor.join(\",\")})` }} />\n            <Link\n              component=\"button\"\n              variant=\"body2\"\n              onClick={() => onClick(item, rndColor)}\n            >\n              {item}\n            </Link>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default React.memo(SearchList);\n","import React from \"react\";\nimport SearchBar from \"../searchbar/SearchBar\";\nimport SearchList from \"../searchbar/SearchList\";\n\nconst PageActionPanel = () => (\n  <div>\n    <SearchBar />\n    <SearchList />\n  </div>\n);\n\nexport default React.memo(PageActionPanel);\n","import React, { useContext } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppContext from \"../../context/useContext\";\n\nconst PdfJsViewer = () => {\n  const { wrapperRef } = useContext(AppContext);\n\n  return (\n    <Grid ref={wrapperRef} className=\"pdfViewer\">\n      <div></div>\n    </Grid>\n  );\n};\n\nexport default React.memo(PdfJsViewer);\n","import React from \"react\";\nimport PdfJsViewer from \"../viewer/PdfJsViewer\";\n\nconst PageViewerPanel = () => (\n  <div>\n    <PdfJsViewer />\n  </div>\n);\n\nexport default React.memo(PageViewerPanel);\n","import {useEffect, useRef} from \"react\";\n\nimport * as pdfjsViewer from \"pdfjs-dist/web/pdf_viewer\";\nimport * as pdfjsLib from \"pdfjs-dist/build/pdf\";\n\nconsole.log(pdfjsLib, pdfjsViewer);\n\n//const pdfjsViewer = window[\"pdfjs-dist/web/pdf_viewer\"];\n// const pdfjsLib = window[\"pdfjs-dist/build/pdf\"];\npdfjsLib.GlobalWorkerOptions.workerSrc =\n  \"//mozilla.github.io/pdf.js/build/pdf.worker.js\";\n\nexport function usePdfViewer(wrapper) {\n  const pdfController = useRef({});\n\n  useEffect(() => {\n    if (!pdfjsLib.getDocument || !pdfjsViewer.PDFSinglePageViewer) {\n      alert(\"Please build the pdfjs-dist library using\\n  `gulp dist-install`\");\n    }\n\n    // The workerSrc property shall be specified.\n    //\n\n    // Some PDFs need external cmaps.\n    //\n    var CMAP_URL = \"../../node_modules/pdfjs-dist/cmaps/\";\n    var CMAP_PACKED = true;\n\n    var DEFAULT_URL = \"./assets/alices-001-chapter.pdf\";\n\n    var container = wrapper.current;\n\n    var eventBus = new pdfjsViewer.EventBus();\n\n    // (Optionally) enable hyperlinks within PDF files.\n    var pdfLinkService = new pdfjsViewer.PDFLinkService({\n      eventBus: eventBus,\n    });\n\n    // (Optionally) enable find controller.\n    var pdfFindController = new pdfjsViewer.PDFFindController({\n      eventBus: eventBus,\n      linkService: pdfLinkService,\n    });\n\n    var pdfSinglePageViewer = new pdfjsViewer.PDFSinglePageViewer({\n      container: container,\n      eventBus: eventBus,\n      linkService: pdfLinkService,\n      findController: pdfFindController,\n    });\n    pdfLinkService.setViewer(pdfSinglePageViewer);\n\n    eventBus.on(\"pagesinit\", function () {\n      // We can use pdfSinglePageViewer now, e.g. let's change default scale.\n      pdfSinglePageViewer.currentScaleValue = \"page-width\";\n\n      // We can try searching for things.\n      /*if (SEARCH_FOR) {\n        pdfFindController.executeCommand(\"find\", { query: SEARCH_FOR });\n      }*/\n    });\n\n    // Loading document.\n    var loadingTask = pdfjsLib.getDocument({\n      url: DEFAULT_URL,\n      cMapUrl: CMAP_URL,\n      cMapPacked: CMAP_PACKED,\n    });\n\n    loadingTask.promise.then(function (pdfDocument) {\n      // Document loaded, specifying document for the viewer and\n      // the (optional) linkService.\n      pdfSinglePageViewer.setDocument(pdfDocument);\n\n      pdfLinkService.setDocument(pdfDocument, null);\n    });\n\n    pdfController.current = pdfFindController;\n  }, [wrapper]);\n\n  return {\n    pdfController: pdfController.current,\n  };\n}\n","import React, {useCallback, useRef, useState} from \"react\";\nimport AppContext from \"./useContext\";\nimport {usePdfViewer} from \"../hooks/usePdfViewer\";\n\nconst AppState = ({ children }) => {\n  const wrapperRef = useRef();\n  const [searchItems, setSearchItems] = useState([]);\n  const [searchValue, handleSearchValue] = useState(\"\");\n\n  const handleAddSearchItem = useCallback(\n    (value) => {\n      if (!value) return;\n      if (!searchItems.includes(value)) setSearchItems([...searchItems, value]);\n      handleSearchValue(\"\");\n    },\n    [searchItems]\n  );\n\n  const {pdfController} = usePdfViewer(wrapperRef);\n\n  return (\n    <AppContext.Provider\n      value={{\n        wrapperRef,\n        pdfController,\n        searchItems,\n        searchValue,\n        handleSearchValue,\n        handleAddSearchItem,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default React.memo(AppState);\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PageTitle from \"./tiles/PageTitle\";\nimport { PageActionPanel, PageViewerPanel } from \"./tiles\";\nimport AppState from \"../context/AppState\";\nimport Box from \"@material-ui/core/Box\";\n\nconst App = () => (\n  <AppState>\n    <CssBaseline />\n\n    <Box mx={2}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={3}>\n          <PageTitle />\n          <PageActionPanel />\n        </Grid>\n        <Grid item xs={12} md={9}>\n          <PageViewerPanel />\n        </Grid>\n      </Grid>\n    </Box>\n  </AppState>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}